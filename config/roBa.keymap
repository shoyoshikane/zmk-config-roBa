#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        mouse-left-click {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        mouse-right-click {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        mouse-middle-click {
            bindings = <&mkp MB3>;
            key-positions = <18 19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W  &kp E         &kp R      &kp T                                                       &kp Y          &kp U  &kp I      &kp O    &kp P
&mt LCTRL A       &kp S  &kp D         &kp F      &kp G        &kp C_MUTE            &kp LS(LG(S))            &kp H          &kp J  &kp K      &kp L    &mt RCTRL ENTER
&mt LEFT_SHIFT Z  &kp X  &kp C         &kp V      &kp B        &kp COLON             &kp SEMI                 &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT MINUS
&kp ESCAPE        &kp A  &kp LEFT_WIN  &lt 1 TAB  &lt 2 SPACE  &lt 3 LANGUAGE_2      &mt LEFT_ALT LANGUAGE_1  &kp BACKSPACE                             &mo 4
            >;

            sensor-bindings = <&inc_dec_kp A B>;
        };

        SYMBOL {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND  &kp CARET        &kp SLASH                             &kp BACKSLASH   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN
&kp AT       &kp HASH    &kp PLUS       &kp QUESTION     &kp ASTERISK  &trans      &trans      &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp COLON
&kp GRAVE    &kp TILDE   &trans         &kp EXCLAMATION  &kp EQUAL     &trans      &trans      &kp PIPE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SQT        &kp DOUBLE_QUOTES
&trans       &trans      &trans         &trans           &trans        &trans      &kp DELETE  &trans                                                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        NUM {
            bindings = <
&kp KP_MINUS    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_SLASH                             &trans       &kp HOME  &kp UP_ARROW  &kp END     &trans
&kp KP_PLUS     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK  &trans      &trans      &kp PAGE_UP  &kp LEFT  &kp DOWN      &kp RIGHT   &kp PAGE_DOWN
&kp KP_N0       &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_EQUAL     &trans      &trans      &trans       &trans    &kp COMMA     &kp KP_DOT  &kp COLON
&kp KP_NUMLOCK  &trans           &trans           &trans           &trans           &trans      &kp DELETE  &trans                                           &trans
            >;
        };

        FUNCTION+BT {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &kp F10                      &trans  &trans        &trans        &trans        &trans
&trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans      &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3
&trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans      &trans  &trans  &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans   &trans      &trans  &trans                                            &bt BT_CLR_ALL
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &trans  &mkp MB5  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };
    };
};
